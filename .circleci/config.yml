version: 2.1

orbs:
  android: circleci/android@2.3.0
  ruby: circleci/ruby@2.1.0

aliases:
  - &workspace
      ~/passkeys-sdk
  - &unit-test-folder-result
      ~/test-results/junit

executors:
  android-executor:
    docker:
      # https://circleci.com/developer/images/image/cimg/android#image-tags
      - image: cimg/android:2024.01.1
    resource_class: large
    working_directory: *workspace

  android-node-executor:
    docker:
      # https://circleci.com/developer/images/image/cimg/android#image-tags
      - image: cimg/android:2024.01.1-node
    resource_class: large
    working_directory: *workspace

  mac-os-executor:
    macos:
      xcode: "15.1.0"
    resource_class: macos.m1.medium.gen1
    working_directory: *workspace

  ruby-executor:
    docker:
      - image: cimg/ruby:3.3.0
    working_directory: *workspace

commands:
  test-results-folder:
    parameters:
      folder:
        default: *unit-test-folder-result
        type: string
    steps:
      - run:
          name: Copying tests results to <<parameters.folder>>
          command: |
            mkdir -p <<parameters.folder>>
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} <<parameters.folder>> \;
          when: always
          working_directory: *workspace

  install-jdk-17:
    steps:
      - run:
          name: Install OpenJDK 17
          command: |
            sudo apt-get update && sudo apt-get install openjdk-17-jdk
            sudo update-alternatives --set java /usr/lib/jvm/java-17-openjdk-amd64/bin/java
            sudo update-alternatives --set javac /usr/lib/jvm/java-17-openjdk-amd64/bin/javac
            java -version

  danger-check:
    parameters:
      danger_params:
        type: string
    steps:
      - run:
          name: Danger check
          command: bundle exec danger <<parameters.danger_params>> --verbose --remove-previous-comments

  move_directory:
    parameters:
      from:
        description: directory to move
        type: string
      to:
        description: destination directory
        type: string
    steps:
      - run: cp -R <<parameters.from>> <<parameters.to>>

jobs:
  assemble:
    executor: android-executor

    steps:
      - checkout
      - android/restore-build-cache
      - android/restore-gradle-cache
      - ruby/install-deps
      - run:
          name: Assemble build
          command: ./gradlew assembleDebug assembleDebugAndroidTest
      - danger-check:
          danger_params: --danger_id=assemble --dangerfile=dangerfiles/dangerfile_pr_validation
      - android/save-gradle-cache
      - android/save-build-cache

  lint-check:
    executor: ruby-executor

    steps:
      - checkout
      - android/restore-build-cache
      - android/restore-gradle-cache
      - ruby/install-deps
      - install-jdk-17
      - run:
          name: Kotlin lint
          command: ./gradlew ktlintCheck
      - danger-check:
          danger_params: --danger_id=lint --dangerfile=dangerfiles/dangerfile_ktlint
      - android/save-gradle-cache
      - android/save-build-cache

  detekt-check:
    executor: android-executor

    steps:
      - checkout
      - android/restore-build-cache
      - android/restore-gradle-cache
      - ruby/install-deps
      - run:
          name: Detekt check
          command: ./gradlew detekt
      - danger-check:
          danger_params: --danger_id=detekt --dangerfile=dangerfiles/dangerfile_detekt
      - android/save-gradle-cache
      - android/save-build-cache

  android-unit-test:
    executor: android-executor

    steps:
      - checkout
      - android/restore-build-cache
      - android/restore-gradle-cache
      - ruby/install-deps
      - run:
          name: Kover code coverage report
          command: ./gradlew :shared:koverXmlReportDebug
      - danger-check:
          danger_params: --danger_id=unit_tests --dangerfile=dangerfiles/dangerfile_code_coverage
      - run:
          name: Kover code coverage rule
          command: ./gradlew :shared:koverVerify
      - android/save-gradle-cache
      - android/save-build-cache
      - test-results-folder
      - store_test_results:
          path: *unit-test-folder-result
      - store_artifacts:
          path: /home/circleci/test-results/

  ios-unit-test:
    executor: mac-os-executor

    steps:
      - checkout
      - android/restore-build-cache
      - android/restore-gradle-cache
      - run:
          name: Run Unit tests
          command: ./gradlew :shared:iosSimulatorArm64Test
      - android/save-gradle-cache
      - android/save-build-cache
      - test-results-folder
      - store_test_results:
          path: *unit-test-folder-result
      - store_artifacts:
          path: /Users/distiller/test-results/

  android-sdk-size-report:
    executor: android-executor

    steps:
      - checkout
      - android/restore-build-cache
      - android/restore-gradle-cache
      - ruby/install-deps
      - run:
          name: Android SDK size report
          command: ./gradlew generateSizeReport
      - store_artifacts:
          path: "shared/build/outputs/sizeReport"
          destination: sizeReport
      - run: mkdir -p builds
      - move_directory:
          from: shared/build/outputs/sizeReport/
          to: builds
      - danger-check:
          danger_params: --danger_id=android_sdk_report --dangerfile=dangerfiles/dangerfile_android_sdk_size_report
      - persist_to_workspace:
          root: *workspace
          paths:
            - builds

  ios-generate-framework:
    executor: mac-os-executor

    steps:
      - checkout
      - run:
          name: Create Framework
          command: ./gradlew iosArm64Binaries
      - run:
          name: Compress Artifacts
          command: |
            tar -cvzf debugFramework.tar.gz shared/build/bin/iosArm64/debugFramework
            tar -cvzf releaseFramework.tar.gz shared/build/bin/iosArm64/releaseFramework
      - store_artifacts:
          path: debugFramework.tar.gz
      - store_artifacts:
          path: releaseFramework.tar.gz

  android-generate-aar:
    executor: android-executor

    steps:
      - checkout
      - run:
          name: Create aars
          command: |
            ./gradlew :shared:assembleDebug
            mv shared/build/outputs/aar/shared-debug.aar TwilioPasskeys-debug.aar
            ./gradlew :shared:assembleRelease
            mv shared/build/outputs/aar/shared-release.aar TwilioPasskeys.aar
      - store_artifacts:
          path: TwilioPasskeys-debug.aar
      - store_artifacts:
          path: TwilioPasskeys.aar

  publish-kotlin-multiplatform-sdk-to-nexus-internal-repository:
    executor: android-executor

    steps:
      - checkout
      - android/restore-build-cache
      - android/restore-gradle-cache
      - run:
          name: Generate signing key ring file
          command: |
            echo $SIGNING_KEY | base64 -d >> $SIGNING_SECRET_KEY_RING_FILE
      - run:
          name: Publish SDK to internal repository
          command: ./gradlew sonatypeTwilioPasskeysStagingRepositoryUpload | tee gradle-task-output.log
      - run:
          name: Save internal repository link
          command: ./scripts/save_sonatype_repository_internal_release_url.sh gradle-task-output.log
      - persist_to_workspace:
          root: *workspace
          paths:
            - tmp/workspace/env_vars

  generate-android-sample-app-using-internal-sdk:
    executor: android-node-executor

    steps:
      - checkout
      - android/restore-build-cache
      - android/restore-gradle-cache
      - attach_workspace:
          at: *workspace
      - run:
          name: Generate APK with maven repo url
          command: |
            source tmp/workspace/env_vars
            echo $REPO_NAME
            echo $REPO_URL
            ./gradlew :androidApp:assembleRelease -PmavenUsername=$OSSRH_USERNAME -PmavenPassword=$OSSRH_PASSWORD -PmavenRepoUrl=$REPO_URL
      - run:
          name: Install Firebase CLI
          command: npm install -g firebase-tools
      - run:
          name: Deploy to Firebase App Distribution
          command: firebase appdistribution:distribute androidApp/build/outputs/apk/release/androidApp-release.apk --app 1:702410982038:android:e26dad2baf4fe5b09278b7 --token $FIREBASE_TOKEN --groups qa --debug

workflows:
  build-all:
    jobs:
      - assemble
      - lint-check:
          requires:
            - assemble
      - android-sdk-size-report:
          requires:
            - assemble
      - detekt-check:
          requires:
            - assemble
      - android-unit-test:
          requires:
            - lint-check
            - detekt-check
      - ios-unit-test:
          requires:
            - lint-check
            - detekt-check
      - ios-generate-framework:
          requires:
            - ios-unit-test
      - android-generate-aar:
          requires:
            - android-unit-test
      - publish-kotlin-multiplatform-sdk-to-nexus-internal-repository:
          requires:
            - android-unit-test
            - ios-unit-test
      - generate-android-sample-app-using-internal-sdk:
          requires:
            - publish-kotlin-multiplatform-sdk-to-nexus-internal-repository
