version: 2.1

orbs:
  ruby: circleci/ruby@2.3.1

aliases:
  - &workspace
      ~/passkeys-sdk
  - &tmp-workspace
      tmp/workspace
  - &env-vars-file
      env_vars

executors:
  ubuntu-small-executor:
    #https://circleci:com/developer/images/image/cimg/base
    docker:
      - image: cimg/base:2024.02
    resource_class: small
    working_directory: *workspace

  mac-os-executor:
    macos:
      xcode: "15.1.0"
    resource_class: macos.m1.medium.gen1
    working_directory: *workspace

  ruby-executor:
    docker:
      - image: cimg/ruby:3.3.0
    working_directory: *workspace

jobs:
  pre-release-ios-check:
    executor: ruby-executor

    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - run:
          name: Pre release check
          command: |
            # Fetch the new and latest iOS SDK versions
            NEW_IOS_SDK_VERSION=$(ruby scripts/versioning/util/get_gradle_property.rb iosSdkVersionName)
            LATEST_IOS_SDK_VERSION=$(ruby scripts/versioning/git/get_last_released_version.rb IOS)

            # Compare versions and exit if they are the same
            if [ "$NEW_IOS_SDK_VERSION" = "$LATEST_IOS_SDK_VERSION" ]; then
              echo "❌ Release Aborted: The new iOS SDK version $NEW_IOS_SDK_VERSION is identical to the latest released version ($LATEST_IOS_SDK_VERSION)."
              echo "Error: Version $NEW_IOS_SDK_VERSION already exists as the latest release ($LATEST_IOS_SDK_VERSION)."
              exit 1
            fi

            echo "✅ New iOS SDK version $NEW_IOS_SDK_VERSION is unique and ready for release."
            echo "NEW_IOS_SDK_VERSION=$NEW_IOS_SDK_VERSION" >> $BASH_ENV
          shell: /bin/bash -l
          environment:
            TMP_WORKSPACE: *tmp-workspace
            ENV_VARS_FILE: *env-vars-file

  generate-framework:
    executor: mac-os-executor

    steps:
      - checkout
      - run:
          name: Create Framework
          command: ./gradlew shared:assembleTwilioPasskeysAuthenticationXCFramework
      - run:
          name: Compress Artifacts
          command: |
            ln -s shared/build/XCFrameworks/debug/TwilioPasskeysAuthentication.xcframework TwilioPasskeysAuthentication.xcframework
            zip -r debugFramework.zip TwilioPasskeysAuthentication.xcframework
            rm TwilioPasskeysAuthentication.xcframework
            ln -s shared/build/XCFrameworks/release/TwilioPasskeysAuthentication.xcframework TwilioPasskeysAuthentication.xcframework
            zip -r releaseFramework.zip TwilioPasskeysAuthentication.xcframework
            rm TwilioPasskeysAuthentication.xcframework
      - store_artifacts:
          path: debugFramework.zip
      - store_artifacts:
          path: releaseFramework.zip
      - persist_to_workspace:
          root: *workspace
          paths:
            - debugFramework.zip
            - releaseFramework.zip

  run-simulator-ios-internal-sdk-e2e-tests:
    executor: ubuntu-small-executor

    parameters:
      waiting_job_name:
        default: ""
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - run:
          name: Start automation pipeline to run E2E tests
          command: |
            source "$TMP_WORKSPACE/$ENV_VARS_FILE"
            echo $IOS_SIMULATOR_APP_URL

            TRIGGERED_PIPELINE=$(./scripts/e2e_tests/trigger_e2e_tests_pipeline.sh $IOS_SIMULATOR_APP_URL $CIRCLE_WORKFLOW_ID << parameters.waiting_job_name >> false true)
            echo "Triggered pipeline: $TRIGGERED_PIPELINE"
            ./scripts/add_env_variable_to_file.sh IOS_INTERNAL_SDK_E2E_TEST_TRIGGERED_PIPELINE $TRIGGERED_PIPELINE $TMP_WORKSPACE $ENV_VARS_FILE
          environment:
            TMP_WORKSPACE: *tmp-workspace
            ENV_VARS_FILE: *env-vars-file
      - persist_to_workspace:
          root: *workspace
          paths:
            - *tmp-workspace

  publish-ios:
    executor: ruby-executor

    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - run:
          name: Release iOS SDK - Publishing XCFramework to GitHub
          command: |
            if [ ! -f releaseFramework.zip ]; then
              echo "releaseFramework.zip not found in workspace"
              exit 1
            fi

            mv releaseFramework.zip TwilioPasskeysAuthentication.xcframework.zip
            CHECKSUM=$(sha256sum TwilioPasskeysAuthentication.xcframework.zip | cut -d ' ' -f 1)
            echo "Checksum: $CHECKSUM"

            CHANGELOG=$(ruby scripts/versioning/generate_changelog.rb true)
            echo "Changelog: $CHANGELOG"

            git clone git@github.com:twilio/twilio-verify-passkeys-ios.git
            cd twilio-verify-passkeys-ios
            sed -i "s|url: .*|url: \"https://github.com/twilio/twilio-verify-passkeys-ios/releases/download/v$NEW_IOS_SDK_VERSION/TwilioPasskeysAuthentication.xcframework.zip\",|" Package.swift
            sed -i "s|checksum:\".*\"|checksum: \"$CHECKSUM\"|" Package.swift
            git config --global user.email $GITHUB_USER_EMAIL
            git config --global user.name $GITHUB_USER_NAME
            git add .
            git commit -m "Update to version v$NEW_IOS_SDK_VERSION"
            git tag "v$NEW_IOS_SDK_VERSION"
            git push origin main
            gem install faraday
            ruby ../scripts/versioning/create_github_release.rb twilio twilio-verify-passkeys-ios $GITHUB_API_TOKEN "v$NEW_IOS_SDK_VERSION" "TwilioPasskeysAuthentication v$NEW_IOS_SDK_VERSION" "${CHANGELOG}" ../TwilioPasskeysAuthentication.xcframework.zip
          shell: /bin/bash -l
          environment:
            TMP_WORKSPACE: *tmp-workspace
            ENV_VARS_FILE: *env-vars-file

workflows:
  release-ios:
    jobs:
      - pre-release-ios-check
      - generate-framework:
          requires:
            - pre-release-ios-check
      - run-simulator-ios-internal-sdk-e2e-tests:
          requires:
            - generate-framework
      - wait-for-ios-internal-sdk-e2e-tests:
          type: approval
          requires:
            - run-simulator-ios-internal-sdk-e2e-tests
      - check-simulator-ios-sdk-e2e-tests-result:
          workflow_name_to_check: "ios-tests"
          requires:
            - wait-for-ios-internal-sdk-e2e-tests
      - wait-for-manual-approval-to-release:
          type: approval
          requires:
            - check-simulator-ios-sdk-e2e-tests-result
      - publish-ios:
          requires:
            - wait-for-manual-approval-to-release
